rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Fonction pour vérifier si l'utilisateur est authentifié
    function isAuthenticated() {
      return request.auth != null;
    }

    // Fonction pour vérifier si l'utilisateur est propriétaire du document
    function isOwner() {
      return request.auth.uid == resource.data.userId;
    }

    // Règles pour la collection favorites
    match /favorites/{document} {
      allow read: if isAuthenticated() && request.auth.uid == resource.data.userId;
      allow create: if isAuthenticated() && request.auth.uid == request.resource.data.userId;
      allow delete: if isAuthenticated() && isOwner();
    }

    // Règles pour les catégories
    match /categories/{document} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated();
      allow update, delete: if isAuthenticated();
    }

    // Règles pour les collections de données
    match /databases/{database}/documents/{category}/{type}/{document} {
      allow read, write: if isAuthenticated() &&
        (type == 'visible' || type == 'accepted' || type == 'rejected');
    }

    // Règles pour la collection apiKeys
    match /apiKeys/{document} {
      allow read, write: if isAuthenticated() && request.auth.uid == resource.data.userId;
    }
  }
}
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Fonction pour vérifier si l'utilisateur est authentifié
    function isAuthenticated() {
      return request.auth != null;
    }

    // Fonction pour vérifier si l'utilisateur est propriétaire du document
    function isOwner() {
      return request.auth.uid == resource.data.userId;
    }

    // Règles pour la collection favorites
    match /favorites/{document} {
      allow read: if isAuthenticated() && request.auth.uid == resource.data.userId;
      allow create: if isAuthenticated() && request.auth.uid == request.resource.data.userId;
      allow delete: if isAuthenticated() && isOwner();
    }

    // Règles pour les collections de restaurants
    match /restaurants_visible/{document} {
      allow read, write: if isAuthenticated();
    }

    match /restaurants_accepted/{document} {
      allow read, write: if isAuthenticated();
    }

    match /restaurants_rejected/{document} {
      allow read, write: if isAuthenticated();
    }

    match /hotels_visible/{document} {
      allow read, write: if isAuthenticated();
    }

    match /hotels_accepted/{document} {
      allow read, write: if isAuthenticated();
    }

    match /hotels_rejected/{document} {
      allow read, write: if isAuthenticated();
    }

    // Règles pour la collection apiKeys
    match /apiKeys/{document} {
      allow read, write: if isAuthenticated() && request.auth.uid == resource.data.userId;
    }
  }
}